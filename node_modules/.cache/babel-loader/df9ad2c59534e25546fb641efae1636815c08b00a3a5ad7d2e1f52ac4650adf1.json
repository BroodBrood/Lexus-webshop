{"ast":null,"code":"var _jsxFileName = \"G:\\\\lexus\\\\lexus-webshop\\\\src\\\\components\\\\PrefetchLink.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Map of routes to their lazy-loaded components for prefetching\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routeComponentMap = {\n  '/models': () => import('../pages/ModelsPage'),\n  '/about': () => import('../pages/AboutPage'),\n  '/experience': () => import('../pages/ExperiencePage'),\n  '/contact': () => import('../pages/ContactPage'),\n  '/testdrive': () => import('../pages/TestDrivePage'),\n  '/technology': () => import('../pages/TechnologyPage')\n};\n\n// Add a basePath constant\nconst basePath = '/portfolio/projecten/build';\n/**\r\n * A Link component that prefetches the target route's component on hover or pointer down\r\n */\nconst PrefetchLink = ({\n  to,\n  children,\n  ...props\n}) => {\n  _s();\n  const [prefetched, setPrefetched] = useState(false);\n  const handlePrefetch = useCallback(() => {\n    if (prefetched || typeof to !== 'string') return;\n    const importComponent = routeComponentMap[to];\n    if (importComponent) {\n      // Start preloading the component\n      importComponent();\n      setPrefetched(true);\n    }\n  }, [to, prefetched]);\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `${basePath}${to}`,\n    onMouseEnter: handlePrefetch,\n    onPointerDown: handlePrefetch,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PrefetchLink, \"5+CjNTByhW48byG7MkK1zlA5czQ=\");\n_c = PrefetchLink;\nexport default _c2 = /*#__PURE__*/React.memo(PrefetchLink);\nvar _c, _c2;\n$RefreshReg$(_c, \"PrefetchLink\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","Link","jsxDEV","_jsxDEV","routeComponentMap","/models","/about","/experience","/contact","/testdrive","/technology","basePath","PrefetchLink","to","children","props","_s","prefetched","setPrefetched","handlePrefetch","importComponent","onMouseEnter","onPointerDown","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["G:/lexus/lexus-webshop/src/components/PrefetchLink.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Link, LinkProps } from 'react-router-dom';\r\n\r\n// Map of routes to their lazy-loaded components for prefetching\r\nconst routeComponentMap: Record<string, () => Promise<any>> = {\r\n  '/models': () => import('../pages/ModelsPage'),\r\n  '/about': () => import('../pages/AboutPage'),\r\n  '/experience': () => import('../pages/ExperiencePage'),\r\n  '/contact': () => import('../pages/ContactPage'),\r\n  '/testdrive': () => import('../pages/TestDrivePage'),\r\n  '/technology': () => import('../pages/TechnologyPage'),\r\n};\r\n\r\n// Add a basePath constant\r\nconst basePath = '/portfolio/projecten/build';\r\n\r\ninterface PrefetchLinkProps extends LinkProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\n/**\r\n * A Link component that prefetches the target route's component on hover or pointer down\r\n */\r\nconst PrefetchLink: React.FC<PrefetchLinkProps> = ({ to, children, ...props }) => {\r\n  const [prefetched, setPrefetched] = useState(false);\r\n  \r\n  const handlePrefetch = useCallback(() => {\r\n    if (prefetched || typeof to !== 'string') return;\r\n    \r\n    const importComponent = routeComponentMap[to];\r\n    if (importComponent) {\r\n      // Start preloading the component\r\n      importComponent();\r\n      setPrefetched(true);\r\n    }\r\n  }, [to, prefetched]);\r\n  \r\n  return (\r\n    <Link \r\n      to={`${basePath}${to}`} \r\n      onMouseEnter={handlePrefetch}\r\n      onPointerDown={handlePrefetch}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default React.memo(PrefetchLink); "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,IAAI,QAAmB,kBAAkB;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAqD,GAAG;EAC5D,SAAS,EAAEC,CAAA,KAAM,MAAM,CAAC,qBAAqB,CAAC;EAC9C,QAAQ,EAAEC,CAAA,KAAM,MAAM,CAAC,oBAAoB,CAAC;EAC5C,aAAa,EAAEC,CAAA,KAAM,MAAM,CAAC,yBAAyB,CAAC;EACtD,UAAU,EAAEC,CAAA,KAAM,MAAM,CAAC,sBAAsB,CAAC;EAChD,YAAY,EAAEC,CAAA,KAAM,MAAM,CAAC,wBAAwB,CAAC;EACpD,aAAa,EAAEC,CAAA,KAAM,MAAM,CAAC,yBAAyB;AACvD,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAG,4BAA4B;AAM7C;AACA;AACA;AACA,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,EAAE;EAAEC,QAAQ;EAAE,GAAGC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMoB,cAAc,GAAGnB,WAAW,CAAC,MAAM;IACvC,IAAIiB,UAAU,IAAI,OAAOJ,EAAE,KAAK,QAAQ,EAAE;IAE1C,MAAMO,eAAe,GAAGhB,iBAAiB,CAACS,EAAE,CAAC;IAC7C,IAAIO,eAAe,EAAE;MACnB;MACAA,eAAe,CAAC,CAAC;MACjBF,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,CAACL,EAAE,EAAEI,UAAU,CAAC,CAAC;EAEpB,oBACEd,OAAA,CAACF,IAAI;IACHY,EAAE,EAAE,GAAGF,QAAQ,GAAGE,EAAE,EAAG;IACvBQ,YAAY,EAAEF,cAAe;IAC7BG,aAAa,EAAEH,cAAe;IAAA,GAC1BJ,KAAK;IAAAD,QAAA,EAERA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACV,EAAA,CAxBIJ,YAAyC;AAAAe,EAAA,GAAzCf,YAAyC;AA0B/C,eAAAgB,GAAA,gBAAe9B,KAAK,CAAC+B,IAAI,CAACjB,YAAY,CAAC;AAAC,IAAAe,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}